[{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"},{"categories":["JavaScript"],"contents":"Ghi chép đời thường khi mình học Essential 1: từ biến/kiểu dữ liệu, so sánh, điều kiện, vòng lặp cho tới hàm.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-1-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 1","Hành trình học","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 1 (NED Academy): Bắt đầu nhẹ nhàng mà chắc"},{"categories":["JavaScript"],"contents":"Phần 2: mảng/đối tượng, arrow function \u0026amp; this, DOM/events, và async với fetch + async/await.","date":"2025-10-21T00:00:00Z","permalink":"http://localhost:1313/blog/nhat-ky-hoc-javascript-essential-2-nedacademy/","tags":["NED Academy","JavaScript Essential","Essential 2","DOM","Async","Tips thực chiến"],"title":"Nhật ký học JavaScript Essential 2 (NED Academy): Từ mảng/đối tượng đến DOM \u0026 async"},{"categories":null,"contents":"Hệ thống quản lý đặt lịch khám bệnh thông minh sử dụng ASP.NET Core, tích hợp chatbot AI tư vấn, phân quyền Identity và quản lý lịch hẹn – đơn thuốc – xét nghiệm.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/dacs_medbooking/","tags":null,"title":"Đồ án cơ sở - Quản lý lịch đặt hẹn khám bệnh"},{"categories":null,"contents":"Nền tảng chia sẻ công thức nấu ăn với hệ thống tài khoản Clerk, phân quyền quản trị, CRUD bài viết, đánh giá và tương tác.","date":"2025-10-20T00:00:00Z","permalink":"http://localhost:1313/portfolio/damh_cnpm/","tags":null,"title":"Đồ án môn Công nghệ phần mềm - Website chia sẻ công thức nấu ăn"},{"categories":["Java"],"contents":"\u003cp\u003eMock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTừ khoá:\u003c/strong\u003e Java, Testing, WireMock, JUnit.\u003cbr\u003e\nTrong bài viết này, mình đi theo hướng \u003cem\u003ethực chiến\u003c/em\u003e: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.\u003c/p\u003e\n\u003ch2 id=\"1-vì-sao-cần-mock\"\u003e1) Vì sao cần mock?\u003c/h2\u003e\n\u003cp\u003eTrong lập trình mạng, code thường tương tác với server, API, hoặc socket, nên cần kiểm tra kỹ lưỡng. JUnit là framework kiểm thử đơn vị (unit testing) phổ biến trong Java, còn WireMock là công cụ giả lập (mocking) để mô phỏng phản hồi từ server mạng – rất hữu ích khi không muốn phụ thuộc vào server thật. Kiểm thử code mạng \u003cstrong\u003ekhông phụ thuộc\u003c/strong\u003e hệ thống bên ngoài. \u003ccode\u003eWireMock\u003c/code\u003e giúp giả lập API với scenario, delay, lỗi…\u003c/p\u003e","date":"2025-10-19T00:00:00Z","permalink":"http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/","tags":["Java","Testing","WireMock","JUnit"],"title":"Kiểm thử code mạng Java với JUnit \u0026 WireMock"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá lập trình Multicast trong Java: Server và Client cơ bản!\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm mới mẻ và thú vị: học cách lập trình Multicast trong Java, một phần quan trọng của môn Lập trình Mạng. Khác với TCP thông thường, Multicast cho phép gửi dữ liệu đến nhiều máy cùng lúc, giống như phát sóng radio vậy!\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Multicast\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-17T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-multicast/","tags":["Java","Multicast"],"title":"Java: Lập trình Multicast"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu về \u003cstrong\u003equản lý địa chỉ kết nối mạng\u003c/strong\u003e, bao gồm khái niệm về địa chỉ IP, port, subnet, và cách Java xử lý chúng trong lập trình mạng. Đây là nền tảng quan trọng để bạn làm chủ các ứng dụng mạng. Cùng mình khám phá nhé!\u003c/p\u003e\n\u003ch2 id=\"quản-lý-địa-chỉ-mạng-là-gì\"\u003eQuản lý địa chỉ mạng là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eQuản lý địa chỉ kết nối mạng\u003c/strong\u003e là quá trình định danh và tổ chức các thiết bị trên mạng để chúng có thể giao tiếp với nhau. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp như \u003ccode\u003eInetAddress\u003c/code\u003e, \u003ccode\u003eSocket\u003c/code\u003e, và \u003ccode\u003eServerSocket\u003c/code\u003e để giúp quản lý địa chỉ IP và port – những \u0026ldquo;tọa độ\u0026rdquo; quan trọng trong mạng. Đây là bước đầu tiên để xây dựng mô hình Client/Server hoặc ứng dụng phân tán.\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-quan-ly-ket-noi-mang/","tags":["Java","Networking","Address Management"],"title":"Java cơ bản:  Khám Phá Quản Lý Địa Chỉ Kết Nối Mạng"},{"categories":["Java"],"contents":"\u003cp\u003eChào mừng các bạn đến với bài viết đầu tiên trong chuỗi \u003cstrong\u003eJava Network\u003c/strong\u003e! Hôm nay, mình sẽ giới thiệu tổng quan về \u003cstrong\u003eTCP/UDP\u003c/strong\u003e, vai trò của \u003cstrong\u003eđịa chỉ IP/Port\u003c/strong\u003e, và mô hình \u003cstrong\u003eClient/Server\u003c/strong\u003e – những nền tảng quan trọng khi lập trình mạng bằng Java. Đây sẽ là bước khởi đầu để bạn làm quen với thế giới kết nối mạng!\u003c/p\u003e\n\u003ch2 id=\"socket-là-gì\"\u003eSocket là gì?\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eSocket\u003c/strong\u003e chính là điểm đầu cuối của một kết nối mạng, nơi dữ liệu được gửi và nhận giữa các thiết bị. Trong Java, gói \u003ccode\u003ejava.net\u003c/code\u003e cung cấp các lớp quan trọng để xử lý:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-co-ban-gioi-thieu-mang-socket/","tags":["Java","Networking","Socket"],"title":"Java cơ bản: Giới thiệu Lập trình Mạng \u0026 Socket"},{"categories":["Java"],"contents":"\u003cp\u003eHành trình khám phá Java Socket TCP: Tạo Server và Client cơ bản!\nChào các bạn! Hôm nay mình muốn chia sẻ một trải nghiệm siêu thú vị: học cách làm một Server và Client TCP cơ bản bằng Java. Đây là một phần quan trọng trong môn Lập trình Mạng, và mình đã thử nghiệm với vài dòng code nhỏ để \u0026ldquo;nói chuyện\u0026rdquo; giữa hai máy.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu với Socket TCP: Nghe lạ nhưng dễ hiểu\u003c/strong\u003e\nTCP là giao thức truyền dữ liệu ổn định, đảm bảo thông tin đến đúng chỗ, còn socket là \u0026ldquo;cầu nối\u0026rdquo; giữa máy chủ và máy khách.\nMình bắt đầu với mấy bước cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-socket-tcp-server-client-co-ban/","tags":["Java","TCP","Socket"],"title":"Java Socket TCP: Server/Client cơ bản"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học lập trình đa tuyến trong Java môn Lập trình Mạng\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay, mình muốn chia sẻ một hành trình mới mà mình vừa trải qua: học về lập trình đa tuyến (multithreading) trong môn Lập trình Mạng bằng Java.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eKhởi đầu với đa tuyến\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eĐa tuyến là cách Java cho phép chạy nhiều luồng (thread) cùng lúc, giúp xử lý nhiều việc một cách hiệu quả, đặc biệt trong lập trình mạng.\nMình bắt đầu với mấy khái niệm cơ bản:\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-lap-trinh-da-tuyen/","tags":["Java","Thread","Multi Thread"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["Java"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình khám phá phân tán đối tượng trong Java bằng RMI\u003c/strong\u003e\nChào các bạn! Hôm nay mình muốn chia sẻ một bài học thú vị: học về phân tán đối tượng (object distribution) trong Java bằng RMI (Remote Method Invocation), một phần quan trọng trong môn Lập trình Mạng. Đây là lần đầu mình tiếp cận với cách gọi phương thức từ xa.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRMI là gì?\u003c/strong\u003e\nRMI là một công nghệ của Java cho phép gọi phương thức từ một đối tượng trên máy này sang máy khác, giống như \u0026ldquo;gửi lời mời\u0026rdquo; qua mạng. Nó dùng để xây dựng ứng dụng phân tán, nơi các máy phối hợp làm việc. Hãy tưởng tượng nó như một đội làm việc từ xa, mỗi người ở một nơi nhưng vẫn \u0026ldquo;hợp sức\u0026rdquo;!\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/java-phan-tan-doi-tuong-rmi/","tags":["Java","RMI"],"title":"Java: Lập trình đa tuyến - Multi Thread"},{"categories":["General"],"contents":"\u003cp\u003e\u003cstrong\u003eHành trình học khóa Network Basics của Cisco trên Networking Academy\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eChào các bạn! Hôm nay mình muốn chia sẻ một hành trình dài và thú vị mà mình vừa hoàn thành: khóa học Network Basics của Cisco trên Cisco Networking Academy (hay còn gọi là NetAcad). Nếu bạn đang tìm hiểu về mạng máy tính, đây là khóa học siêu hay dành cho người mới bắt đầu.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBắt đầu hành trình: Từ zero đến hero với Network Basics\u003c/strong\u003e\u003c/p\u003e","date":"2025-10-09T00:00:00Z","permalink":"http://localhost:1313/blog/network-basics-cisco/","tags":["Networking","Cisco"],"title":"Network Basics Cisco"},{"categories":null,"contents":"\u003ch2 id=\"xin-chào-\"\u003eXin chào 👋\u003c/h2\u003e\n\u003cp\u003eMình là Phan Thị Phương Dung, sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH). Blog này là nơi mình chia sẻ hành trình học tập, kinh nghiệm thực tế, và những kiến thức mình tích lũy trong quá trình khám phá công nghệ.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHiện tại:\u003c/strong\u003e Là một sinh viên năm 4 chuyên ngành Công nghệ Thông tin tại Trường Đại học Công nghệ Thành phố Hồ Chí Minh (HUTECH), tôi đang tập trung phát triển các kỹ năng chuyên môn để trở thành một chuyên viên kiểm thử phần mềm (Tester) hoặc chuyên viên đảm bảo chất lượng (QA/QC). Hiện tại, tôi đang:\u003c/p\u003e","date":null,"permalink":"http://localhost:1313/about/","tags":null,"title":"About"}]