<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WireMock on Blog Lập Trình Mạng</title>
    <link>http://localhost:1313/tags/wiremock/</link>
    <description>Recent content in WireMock on Blog Lập Trình Mạng</description>
    <generator>Hugo</generator>
    <language>vi</language>
    <lastBuildDate>Sun, 19 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/wiremock/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kiểm thử code mạng Java với JUnit &amp; WireMock</title>
      <link>http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/</link>
      <pubDate>Sun, 19 Oct 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/kiem-thu-network-java-junit-wiremock/</guid>
      <description>&lt;p&gt;&#xD;&#xA;&lt;figure class=&#34;my-6&#34;&gt;&#xD;&#xA;  &lt;img&#xD;&#xA;    src=&#34;http://localhost:1313/images/posts/kiem-thu-network-java-junit-wiremock.svg&#34;&#xD;&#xA;    alt=&#34;minh họa&#34;&#xD;&#xA;    loading=&#34;lazy&#34;&#xD;&#xA;    class=&#34;mx-auto block &#34;&gt;&#xD;&#xA;  &#xD;&#xA;&lt;/figure&gt;&lt;/p&gt;&#xA;&lt;p&gt;Mock server HTTP, giả lập tình huống lỗi, timeouts, và viết test đáng tin cậy cho logic mạng.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Từ khoá:&lt;/strong&gt; Java, Testing, WireMock, JUnit.&lt;br&gt;&#xA;Trong bài viết này, mình đi theo hướng &lt;em&gt;thực chiến&lt;/em&gt;: giải thích ngắn gọn, kèm checklist, bẫy thường gặp và ví dụ code để bạn có thể áp dụng ngay vào dự án.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-vì-sao-cần-mock&#34;&gt;1) Vì sao cần mock?&lt;/h2&gt;&#xA;&lt;p&gt;Kiểm thử code mạng &lt;strong&gt;không phụ thuộc&lt;/strong&gt; hệ thống bên ngoài. &lt;code&gt;WireMock&lt;/code&gt; giúp giả lập API với scenario, delay, lỗi…&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
